plugins {
    id "com.android.library"
    id "kotlin-android"
}

android {
    /*signingConfigs {
        def keyProps = new Properties()
        //def keyPropsFile = rootProject.file("keys/keystore.properties")
        def keyPropsFile = new File("keys/keystore.properties")
        keyProps.load(new FileInputStream(keyPropsFile))
        release {
            storeFile file(keyProps["release_storeFile"])
            storePassword keyProps["release_storePassword"]
            keyAlias keyProps["release_keyAlias"]
            keyPassword keyProps["release_keyPassword"]
        }
        debug {
            storeFile file(keyProps["debug_storeFile"])
            storePassword keyProps["debug_storePassword"]
            keyAlias keyProps["debug_keyAlias"]
            keyPassword keyProps["debug_keyPassword"]
        }
    }*/
    /*signingConfigs {
        release {
            storeFile file(release_storeFile)
            storePassword release_storePassword
            keyAlias release_keyAlias
            keyPassword release_keyPassword
        }

        debug {
            storeFile file(debug_storeFile)
            storePassword debug_storePassword
            keyAlias debug_keyAlias
            keyPassword debug_keyPassword
        }
    }*/

    compileSdk 31
    //buildToolsVersion "30.0.3"

    defaultConfig {
        //applicationId "com.breakout.util"
        minSdk 21
        targetSdk 30

        //multiDexEnabled true
        //vectorDrawables.useSupportLibrary = true
        consumerProguardFiles "consumer-rules.pro"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    /*
        DSL element 'dexOptions' is obsolete and should be removed.
        It will be removed in version 8.0 of the Android Gradle plugin.
        Using it has no effect, and the AndroidGradle plugin optimizes dexing automatically.
    dexOptions {
        maxProcessCount 4 // this is the default value
        javaMaxHeapSize "4g"
        jumboMode true
    }
     */

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
        /*debug {
            signingConfig signingConfigs.debug
        }*/
    }

    /* ------------------------------------------------------------
        자바 8 언어 기능 및 API 사용
        https://developer.android.com/studio/write/java8-support
     */
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // off lint options
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    /*packagingOptions {
        exclude "META-INF/DEPENDENCIES"
        exclude "META-INF/NOTICE"
        exclude "META-INF/LICENSE"
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/NOTICE.txt"
    }*/

    // TODO: 2018-07-21 | http 라이브러리 교체 필요함
    useLibrary "org.apache.http.legacy"     // api 23 : Apache HTTP Client Removal
}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    /* ex
    implementation fileTree(include: ["*.jar"], dir: "libs")
    implementation "[group-id]:[artifact-id]:[version]"
    implementation project(":[module-name ]")
    implementation group: "[group-id]", name: "[artifact-id]", version: "[version]"
    */
    implementation fileTree(dir: "libs", include: ["*.jar"])
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"


    /* ------------------------------------------------------------
        Kotlin
            https://developer.android.com/kotlin/add-kotlin
        Android KTX
            https://developer.android.com/kotlin/ktx
     */
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


    /* ------------------------------------------------------------
        Google Play
     */
    /*
        Play Install Referrer
            https://developer.android.com/google/play/installreferrer/library
     */
    implementation "com.android.installreferrer:installreferrer:2.2"


    /* ------------------------------------------------------------
        Google Material Design
     */
    /*
        Material Components for Android
            https://material.io/develop/android/docs/getting-started
     */
    //TODO 버전 올릴 경우 오류 확인 필요 - style.xml
    implementation "com.google.android.material:material:1.0.0"
//    implementation "com.google.android.material:material:1.2.1"


    /* ------------------------------------------------------------
        Jetpack
            https://developer.android.com/jetpack/androidx/explorer
     */
    /*
        Appcompat | https://developer.android.com/jetpack/androidx/releases/appcompat
            이전 API 버전의 플랫폼에서 새 API에 액세스할 수 있습니다(대부분 머티리얼 디자인 사용).
     */
    implementation "androidx.appcompat:appcompat:1.3.1"
    /*
        Annotation | https://developer.android.com/jetpack/androidx/releases/annotation
            도구 및 다른 개발자가 앱의 코드를 이해하는 데 도움이 되는 메타데이터를 노출합니다.
     */
    implementation "androidx.annotation:annotation:1.2.0"
    /*
        Multidex | https://developer.android.com/jetpack/androidx/releases/multidex
            Android 5 이전 기기에 여러 dex 파일이 있는 애플리케이션을 배포합니다.
     */
//    implementation "androidx.multidex:multidex:2.0.1"
    /*
        Ads | https://developer.android.com/jetpack/androidx/releases/ads
            Play 서비스 유무에 관계없이 광고 ID를 가져옵니다.
     */
    implementation "androidx.ads:ads-identifier:1.0.0-alpha04"
    /*
        Lifecycle | https://developer.android.com/jetpack/androidx/releases/lifecycle
            활동 또는 프래그먼트의 현재 수명 주기 상태에 따라 동작을 조정할 수 있는 수명 주기 인식 구성요소를 빌드합니다.
     */
    def lifecycle_version = "2.3.1"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"


    /* ------------------------------------------------------------
        Firebase
            https://firebase.google.com/docs/android/setup
            https://firebase.google.com/docs/android/setup#available-libraries
     */
//    implementation "com.google.firebase:firebase-core:18.0.0"
//    implementation "com.google.firebase:firebase-auth:20.0.1"
//    implementation "com.google.firebase:firebase-messaging:21.0.0"
//    implementation "com.google.firebase:firebase-analytics:18.0.0"


    /* ------------------------------------------------------------
        Google
            https://developers.google.com/android/guides/setup
     */
    implementation "com.google.android.gms:play-services-base:17.6.0"
//    implementation "com.google.android.gms:play-services-auth:19.2.0"
//    implementation "com.google.android.gms:play-services-analytics:17.0.1"


    /* ------------------------------------------------------------
        Util
     */
    /*
        Guava: Google Core Libraries for Java
            https://github.com/google/guava
     */
    implementation "com.google.guava:guava:28.0-android"

    // Gson | https://github.com/google/gson
    implementation "com.google.code.gson:gson:2.8.6"

    // Java HTML Parser | https://jsoup.org/
    implementation "org.jsoup:jsoup:1.13.1"

    // Snacktory | https://github.com/karussell/snacktory
    implementation "com.github.karussell:snacktory:c05c5ec338"
}